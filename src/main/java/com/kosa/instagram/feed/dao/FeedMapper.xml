<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.instagram.feed.dao.IFeedRepository">

<insert id="writeReply" parameterType="com.kosa.instagram.feed.model.ReplyVo">
<![CDATA[	
	INSERT INTO reply(reply_no, feed_no, member_id, reply_content, reply_date)
	VALUES (REPLY_NO_SEQ.NEXTVAL, #{feedNo}, #{memberId}, #{replyContent}, SYSDATE)
]]>
</insert>

<delete id="deleteReply" parameterType="int">
<![CDATA[
	DELETE FROM reply WHERE reply_no=#{replyNo}
]]>
</delete>

<insert id="increaseLike">
<![CDATA[
	INSERT INTO like_table(feed_no, member_id)
	VALUES (#{feedNo}, #{memberId})
]]>
</insert>

<delete id="decreaseLike">
<![CDATA[
	DELETE FROM like_table WHERE feed_no=#{feedNo} AND member_id=#{memberId}
]]>
</delete>

<insert id="makeLog" parameterType="com.kosa.instagram.LogVo">
<![CDATA[
	INSERT INTO log(log_no, log_time, log_uri, member_id, log_keyword, feed_no, log_like_check)
	VALUES (LOG_NO_SEQ.NEXTVAL, SYSTIME, #{logURI}, #{memberId}, #{logKeyword}, #{feedNo}, #{logLikeCheck})
]]>
</insert>

<select id="getTenFeeds" parameterType="String" resultType="com.kosa.instagram.feed.model.FeedVo">
<![CDATA[
	select *
		from (select 
        	f.feed_no as "feedNo", 
	        f.member_id as "memberId", 
    	    f.feed_content as "feedContent", 
        	f.upload_date as "uploadDate", 
        	f.place as "place", 
        	(select count(*) from like_table where feed_no = f.feed_no) as "likeCount",
        	row_number() over(order by f.upload_date desc) as num
        		from feed f 
        		where member_id in (select to_id from follow where from_id = #{memberId})
    		) 
		where num between #{start} and #{end}
]]>
</select>

<select id="getHashtagList" parameterType="int" resultType="String">
<![CDATA[	SELECT hashtag FROM hashtag WHERE feed_no=#{feedNo}
]]>
</select>

<select id="getWriter" parameterType="int" resultType="com.kosa.instagram.member.model.MemberVo">
<![CDATA[
	select 
	    m.nickname as "nickname", 
    	f.file_no as "fileNo", 
    	f.file_data as "fileData"
	from member m join upload_file f on m.file_no = f.file_no 
	where m.member_id = (SELECT member_id FROM feed WHERE feed_no = #{feedNo})    
]]>
</select>

<select id="getUploadFiles" parameterType="int" resultType="byte[]">
<![CDATA[
	SELECT 
		file_data AS "fileData"
	FROM upload_file
	WHERE feed_no=#{feedNo}
]]>
</select>
<select id="getReply" parameterType="int" resultType="com.kosa.instagram.feed.model.ReplyVo">
<![CDATA[
	select 
	    r.reply_no as "replyNo", 
    	m.nickname as "nickname", 
    	r.reply_content as "replyContent", 
    	r.reply_date as "replyDate", 
    	f.file_data as "fileData" 
	from reply r 
		join member m on r.member_id = m.member_id 
		join upload_file f on m.file_no = f.file_no 
	where r.feed_no = #{feedNo};
]]>
</select>
	<select id="countContent" parameterType="String" resultType="int">
		<![CDATA[
			select count(feed_no) 
			from feed
			where member_id=#{memberId}
		
		]]>
	</select>
	
	<select id="countFollower" parameterType="String" resultType="int">
		<![CDATA[
			select count(from_id)
			from follow
			where to_id=#{memberId}
		]]>
	</select>
	
	<select id="countFollow" parameterType="String" resultType="int">
		<![CDATA[
			select count(to_id)
			from follow
			where from_id=#{memberId}
		]]>
	</select>
	
	<select id="selectFollowerByUser" parameterType="String" resultType="String">
		<![CDATA[
			select nickname
			from member
			where member_id=(select from_id 
				   from follow 
				   where to_id=#{memberId});
		]]>
	</select>
	
	<select id="selectFollowByUser" parameterType="String" resultType="String">
		<![CDATA[
			select nickname
			from member
			where member_id=(select to_id
							from follow
							where from_id=#{memebrId});
		]]>
	</select>
	
	<select id="selectContentListByUser" parameterType="String" resultType="byte">
		<![CDATA[
			select file_data
			from file
			where feed_no in (select feed_no
							  from feed
							  where member_id=${memberId});
			
		]]>
	</select>
	<select id="searchListByKeyword" parameterType="String" resultType="hashmap">
		<![CDATA[ 
			select member_id, nickname
			from member
			where member_id like #{keyword}
					or
				  nickname like #{keyword}
		 ]]>
	</select>

	<select id="searchListByHashtag" parameterType="String" resultType="hashmap">
		<![CDATA[  
			select count(hashtag), hashtag
			from hashtag
			where hashtag like #{hashtag}
		 ]]>		 
	</select>
</mapper>